# .github/workflows/deploy-functions.yml (Using GitHub Secrets)
name: Deploy Azure Functions

on:
  push:
    branches: [main]
    paths: 
      - 'functions/backend-functions-ts/**'
      - '.github/workflows/deploy-functions.yml'
  pull_request:
    branches: [main]
    paths: 
      - 'functions/backend-functions-ts/**'
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: 'func-devinsights'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'functions/backend-functions-ts'
  NODE_VERSION: '18.x'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json

    - name: 'Install dependencies'
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        npm ci

    - name: 'Run linting'
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        npm run lint --if-present

    - name: 'Run tests'
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        npm test --if-present

    - name: 'Build TypeScript'
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment: production
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/package-lock.json

    - name: 'Install dependencies and build'
      run: |
        cd ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        npm ci
        npm run build
        npm prune --production

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Update Function App Settings with Secrets'
      run: |
        az functionapp config appsettings set \
          --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
          --resource-group "rg-devinsights-blog" \
          --settings \
            "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" \
            "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            "JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            "API_KEY=${{ secrets.API_KEY }}"

    - name: 'Deploy to Azure Functions'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: 'Test deployment'
      run: |
        sleep 30
        curl -f "https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health" || exit 1
        echo "‚úÖ Deployment successful and health check passed"

    - name: 'Notify on success'
      if: success()
      run: |
        echo "üöÄ Successfully deployed to Azure Functions"
        echo "üîó Function App URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
        echo "üîó Custom URL: https://api.devinsights.yourdomain.com"

    - name: 'Notify on failure'
      if: failure()
      run: |
        echo "‚ùå Deployment failed"
        echo "Please check the logs and try again"